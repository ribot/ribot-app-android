apply plugin: 'com.android.application'
    apply from: '../config/quality/quality.gradle'
    apply plugin: 'com.github.triplet.play'
    apply plugin: 'com.neenbedankt.android-apt'

    android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
    applicationId 'io.ribot.app'
    minSdkVersion 19
    targetSdkVersion 23
    testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
    versionCode 5000
    // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
    versionName '0.5.0'
    buildConfigField("String", "GOOGLE_API_SERVER_CLIENT_ID",
    "\"${ribotAppGoogleApiServerClientId}\"")
    }

    signingConfigs {
    // You must set up an environment var before release signing
    // Run: export RIBOT_APP_KEY={password}
    release {
    storeFile file("${ribotAppKeystoreReleaseLocation}")
    keyAlias "${ribotAppReleaseKeyAlias}"
    storePassword "${ribotAppReleaseStorePassword}"
    keyPassword "${ribotAppReleaseKeyPassword}"
    }

    debug {
    storeFile file("${ribotAppKeystoreDebugLocation}")
    keyAlias "${ribotAppDebugKeyAlias}"
    storePassword "${ribotAppDebugStorePassword}"
    keyPassword "${ribotAppDebugKeyPassword}"
    }
    }

    buildTypes {

    release {
    signingConfig signingConfigs.release

            /*
            * By default ProGuard optimizations are disabled. If you want to enable them
            * replace proguard-android.txt with proguard-android-optimize.txt but make sure you
            * test thoroughly if you go this route as app may become unstable.
            */
    minifyEnabled true
    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    debug {
    versionNameSuffix " Debug"
    debuggable true
    }
    }

    sourceSets {
    def commonTestDir = 'src/commonTest/java'
    test {
    java.srcDir commonTestDir
    }
    androidTest {
    java.srcDir commonTestDir
    }
    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
    warning 'InvalidPackage'
    }

    }

    play {
    track = 'alpha'
    serviceAccountEmail = "${ribotAppPlayStoreServiceAccount}"
    pk12File = file("${ribotAppPlayStorePk12Location}")
    }

    dependencies {
final PLAY_SERVICES_VERSION = '8.3.0'
final SUPPORT_LIBRARY_VERSION = '23.1.1'
final RETROFIT_VERSION = '2.0.0-beta3'
final OKHTTP_VERSION = '2.7.0'
final DAGGER_VERSION = '2.0.2'
final DEXMAKER_VERSION = '1.4'
final HAMCREST_VERSION = '1.3'
final MOCKITO_VERSION = '1.10.19'
final ESPRESSO_VERSION = '2.2.1'
final UI_AUTOMATOR_VERSION = '2.1.2'
final JUNIT_VERSION = '4.12'
final RUNNER_VERSION = '0.4'

    compile "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:percent:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"

    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'

    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.sqlbrite:sqlbrite:0.5.0'
    compile 'com.squareup:otto:1.3.8'

    compile 'io.reactivex:rxjava:1.1.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:4.1.0'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile 'com.estimote:sdk:0.9.4@aar'

    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    apt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2

    androidTestCompile "junit:junit:$JUNIT_VERSION"
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
    exclude group: 'com.android.support', module: 'appcompat'
    exclude group: 'com.android.support', module: 'support-v4'
    exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test.uiautomator:uiautomator-v18:$UI_AUTOMATOR_VERSION"
    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"
    androidTestCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:$DEXMAKER_VERSION"

    androidTestApt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
    testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    testCompile 'org.robolectric:robolectric:3.0'

    testApt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    }

    // Log out test results to console
    tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
    }
